{"version":3,"sources":["C:/Users/matheus/Dropbox/projetos/spotifyManager/src/$_lazy_route_resource lazy","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/app.component.html","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/app.component.scss","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/app.component.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/app.module.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/callback/callback.component.html","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/callback/callback.component.scss","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/callback/callback.component.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/dashboard.component.html","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/dashboard.component.scss","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/dashboard.component.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/playlist-view/playlist-view.component.html","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/playlist-view/playlist-view.component.scss","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/playlist-view/playlist-view.component.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/toolbar/toolbar.component.html","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/toolbar/toolbar.component.scss","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/toolbar/toolbar.component.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/user-pane/user-pane.component.html","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/user-pane/user-pane.component.scss","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/user-pane/user-pane.component.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/material.module.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/musica-manager.service.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/musica-preview.service.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/router-guard.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/routes.routes.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/shared/Access.model.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/shared/musica.model.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/shared/playlist.model.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/shared/usuario.model.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/solicitar-acesso/solicitar-acesso.component.html","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/solicitar-acesso/solicitar-acesso.component.scss","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/solicitar-acesso/solicitar-acesso.component.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/spotify.service.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/assets/user-bg.png","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/environments/environment.ts","C:/Users/matheus/Dropbox/projetos/spotifyManager/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\r\nimport {SpotifyService} from './spotify.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'app';\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\nimport { SolicitarAcessoComponent } from './solicitar-acesso/solicitar-acesso.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ToolbarComponent } from './dashboard/toolbar/toolbar.component';\r\nimport { UserPaneComponent } from './dashboard/user-pane/user-pane.component';\r\nimport { PlaylistViewComponent } from './dashboard/playlist-view/playlist-view.component';\r\nimport {MaterialModule} from './material.module';\r\nimport {CallbackComponent} from './callback/callback.component';\r\nimport { SpotifyService } from './spotify.service';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ROUTES} from './routes.routes';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {RouterGuard} from './router-guard';\r\nimport {DndModule} from 'ng2-dnd';\r\nimport {MatIconRegistry} from \"@angular/material\";\r\nimport {MusicaManager} from \"./musica-manager.service\";\r\nimport {MusicaPreviewService} from \"./musica-preview.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SolicitarAcessoComponent,\r\n    DashboardComponent,\r\n    ToolbarComponent,\r\n    UserPaneComponent,\r\n    PlaylistViewComponent,\r\n    CallbackComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(ROUTES),\r\n    DndModule.forRoot()\r\n  ],\r\n  providers: [\r\n    RouterGuard,\r\n    SpotifyService,\r\n    MusicaManager,\r\n    MusicaPreviewService\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ PlaylistViewComponent ],\r\n})\r\nexport class AppModule {\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/app.module.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n  <mat-spinner></mat-spinner>\\r\\n  <section class=\\\"mat-typography\\\">\\r\\n    <h3 class=\\\"mat-display-1\\\">{{ msg_status }}...</h3>\\r\\n  </section>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/callback/callback.component.html\n// module id = ../../../../../src/app/callback/callback.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  margin: 100px auto;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-direction: column;\\n      flex-direction: column;\\n  -ms-flex-align: center;\\n      align-items: center; }\\n  .container section {\\n    margin-top: 30px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/callback/callback.component.scss\n// module id = ../../../../../src/app/callback/callback.component.scss\n// module chunks = main","import {Component, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {environment as env} from '../../environments/environment';\r\nimport {Access} from '../shared/Access.model';\r\nimport {SpotifyService} from '../spotify.service';\r\nimport {Router} from '@angular/router';\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.scss']\r\n})\r\nexport class CallbackComponent implements OnInit{\r\n  \r\n  public msg_status: string = 'lendo os dados'\r\n\r\n  constructor(private api: SpotifyService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.api.lerOsParamentrosDaUrl(window.location.href)\r\n    this.api.pegarInformacoesDoUsuario()\r\n      .then(resp => {\r\n\r\n        this.msg_status = 'carregando suas playlists'\r\n        this.api.carregarPlaylists()\r\n          .then(resp => {\r\n            console.log(['info', this.api.access, this.api.usuario])\r\n            this.router.navigate(['/painel'])\r\n          })\r\n          .catch(m => this.msg_status = m);\r\n      })\r\n      .catch(m => this.msg_status = m);\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/callback/callback.component.ts","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <button mat-icon-button (click)=\\\"drawer.toggle()\\\"><mat-icon>menu</mat-icon></button>\\r\\n  <h1>Spotify Manager</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-sidenav-container>\\r\\n  \\r\\n  <!-- navegação do usuario. Contem as informações pessoais e uma lista com as playlists do mesmo -->\\r\\n  <mat-sidenav mode=\\\"side\\\" [opened]=\\\"true\\\" #drawer>\\r\\n    <app-user-pane></app-user-pane>\\r\\n  </mat-sidenav>\\r\\n  \\r\\n  <mat-sidenav-content dnd-droppable (onDropSuccess)=\\\"dropEvent($event)\\\" [dropZones]=\\\"['user-pane-item']\\\">\\r\\n    <div #playlistsContainer id=\\\"playlistsContainer\\\"></div>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-sidenav-container {\\n  height: 91vh;\\n  box-sizing: border-box; }\\n\\nmat-sidenav-content {\\n  padding: 20px 0 20px 20px;\\n  box-sizing: border-box;\\n  position: relative;\\n  height: 100%;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-direction: row;\\n      flex-direction: row;\\n  overflow-x: auto;\\n  overflow-y: hidden; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/dashboard.component.scss\n// module id = ../../../../../src/app/dashboard/dashboard.component.scss\n// module chunks = main","import {\r\n  Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, Injector, OnInit, ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport {SpotifyService} from '../spotify.service';\r\nimport {PlaylistViewComponent} from \"./playlist-view/playlist-view.component\";\r\nimport {MatSnackBar} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  @ViewChild('playlistsContainer', { read: ViewContainerRef }) containerPlaylist\r\n  \r\n  private playlistsAbertas: Map<string, ComponentRef<PlaylistViewComponent>> = new Map()\r\n  \r\n  \r\n  constructor(\r\n      public api: SpotifyService,\r\n      private resolver: ComponentFactoryResolver,\r\n      private injector: Injector,\r\n      public snackBar: MatSnackBar,\r\n  ) {\r\n  \r\n  \r\n    // let id: string = val[1].id // pega o id da playlist do spotify definida como id do container html.\r\n    // if (this.playlistsAbertas.has(id)) {\r\n    //   this.snackBar.open('Está playlist já está aberta!',null , {duration: 2000});\r\n    // } else {\r\n    //   this.criarPlaylistView(val[1].id)\r\n    // }\r\n  }\r\n  \r\n  /**\r\n   * Cria uma nova view de playlist.\r\n   * {@link https://netbasal.com/dynamically-creating-components-with-angular-a7346f4a982d}\r\n   * */\r\n  criarPlaylistView(playlistId){\r\n    let factory: ComponentFactory<PlaylistViewComponent> = this.resolver.resolveComponentFactory(PlaylistViewComponent)\r\n    let novaView = this.containerPlaylist.createComponent(factory)\r\n    novaView.instance.carregarPlaylist(playlistId)\r\n    \r\n    novaView.instance.destruir.subscribe(data => {\r\n      this.playlistsAbertas.get(data).destroy()\r\n      this.playlistsAbertas.delete(data)\r\n    })\r\n    \r\n    this.playlistsAbertas.set(playlistId, novaView)\r\n    \r\n  }\r\n  \r\n  ngOnInit() {\r\n  }\r\n  \r\n  public dropEvent(event) {\r\n    if (this.playlistsAbertas.has(event.dragData)) {\r\n      this.snackBar.open('Está playlist já está aberta!',null , {duration: 1500});\r\n    } else {\r\n      this.criarPlaylistView(event.dragData)\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/dashboard.component.ts","module.exports = \"<mat-card>\\r\\n  \\r\\n  <div class=\\\"pre-loader\\\" *ngIf=\\\"playlist == undefined; else card\\\" >\\r\\n      <mat-spinner></mat-spinner>\\r\\n      <h3 mat-subheader>{{ load_status }}</h3>\\r\\n  </div>\\r\\n  \\r\\n  <ng-template #card>\\r\\n    <mat-card-header>\\r\\n      \\r\\n      <button class=\\\"mat-flat-button close-btn\\\" (click)=\\\"close($event)\\\"><mat-icon>close</mat-icon></button>\\r\\n      <img mat-card-avatar src=\\\"assets/icon-user.png\\\">\\r\\n      <mat-card-title>{{ playlist.name }}</mat-card-title>\\r\\n      <mat-card-subtitle> {{ playlist.tracks_total }} musicas</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <mat-card-actions>\\r\\n    \\r\\n    </mat-card-actions>\\r\\n    <mat-card-content>\\r\\n      <h3 matSubheader>Músicas</h3>\\r\\n      <mat-list dnd-sortable-container [sortableData]=\\\"playlist.tracks\\\" >\\r\\n        <mat-list-item\\r\\n          *ngFor=\\\"let musica of playlist.tracks; let i = index\\\"\\r\\n          dnd-sortable\\r\\n          [sortableIndex]=\\\"i\\\"\\r\\n          (onDragStart)=\\\"mg.dropInitEvent(musica, playlist.name, i)\\\"\\r\\n          (onDropSuccess)=\\\"mg.dropEndEvent(musica, playlist.name, i)\\\"\\r\\n        >\\r\\n\\r\\n          <mat-icon matListIcon (click)=\\\"previewService.preview(musica.preview_url)\\\">\\r\\n            <svg fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n              <path d=\\\"M8 5v14l11-7z\\\"/>\\r\\n              <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\r\\n            </svg>\\r\\n            </mat-icon>\\r\\n          <h4 mat-line>{{ musica.artists_name }}, {{ musica.album_name }}</h4>\\r\\n          <p mat-line>{{ musica.name }}</p>\\r\\n        </mat-list-item>\\r\\n      </mat-list>\\r\\n    </mat-card-content>\\r\\n  </ng-template>\\r\\n</mat-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/playlist-view/playlist-view.component.html\n// module id = ../../../../../src/app/dashboard/playlist-view/playlist-view.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-card {\\n  position: relative;\\n  min-width: 400px;\\n  max-width: 400px;\\n  min-height: 95%;\\n  max-height: 95%;\\n  margin-right: 16px;\\n  overflow-y: auto; }\\n  mat-card .pre-loader {\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-direction: column;\\n        flex-direction: column;\\n    -ms-flex-align: center;\\n        align-items: center;\\n    margin-top: 50px;\\n    text-align: center;\\n    font-size: 20px; }\\n  mat-card .play-preview {\\n    cursor: pointer; }\\n  mat-card .close-btn {\\n    position: absolute;\\n    top: 24px;\\n    right: 0; }\\n  mat-card svg {\\n    fill: currentColor; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/playlist-view/playlist-view.component.scss\n// module id = ../../../../../src/app/dashboard/playlist-view/playlist-view.component.scss\n// module chunks = main","import {Component, EventEmitter, Inject, OnInit, Output} from '@angular/core';\r\nimport {SpotifyService} from \"../../spotify.service\";\r\nimport {Playlist} from \"../../shared/playlist.model\";\r\nimport {Musica} from \"../../shared/musica.model\";\r\nimport {MusicaManager} from \"../../musica-manager.service\";\r\nimport {MusicaPreviewService} from \"../../musica-preview.service\";\r\n\r\n@Component({\r\n  selector: 'app-playlist-view',\r\n  templateUrl: './playlist-view.component.html',\r\n  styleUrls: ['./playlist-view.component.scss']\r\n})\r\nexport class PlaylistViewComponent implements OnInit {\r\n\r\n  @Output() destruir: EventEmitter<string> = new EventEmitter<string>()\r\n  public playlist: Playlist\r\n  public load_status: string  = 'carregando playlist'\r\n  public dndMusica: any = {}\r\n  \r\n  constructor( private api: SpotifyService, public mg: MusicaManager, public previewService: MusicaPreviewService) {}\r\n  \r\n  public carregarPlaylist(id: string): void {\r\n    this.api.carregarMusicas(this.api.getPlaylistById(id))\r\n      .then(playlist => {\r\n        this.playlist = playlist\r\n      })\r\n      .catch(err => {\r\n        this.playlist = undefined\r\n        this.load_status = err\r\n      })\r\n  }\r\n  \r\n  ngOnInit(){}\r\n  \r\n  \r\n  \r\n  close(event) {\r\n    this.destruir.emit(this.playlist.id)\r\n  }\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/playlist-view/playlist-view.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/toolbar/toolbar.component.html\n// module id = ../../../../../src/app/dashboard/toolbar/toolbar.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/toolbar/toolbar.component.scss\n// module id = ../../../../../src/app/dashboard/toolbar/toolbar.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.scss']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/toolbar/toolbar.component.ts","module.exports = \"<section class=\\\"container mat-typography\\\">\\r\\n\\r\\n  <div class=\\\"card-user\\\">\\r\\n    <div class=\\\"perfil-image\\\">\\r\\n      <img [src]=\\\"api.usuario.prifile_image || 'assets/icon-user.png'\\\">\\r\\n    </div>\\r\\n    <div class=\\\"perfil-info\\\">\\r\\n      <h4>{{ api.usuario.display_name || api.usuario.id }}</h4>\\r\\n      <h5> {{ api.usuario.email }}</h5>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"playlists\\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <h3 mat-subheader>Suas Playlists</h3>\\r\\n    \\r\\n    <mat-nav-list >\\r\\n        <mat-list-item\\r\\n          *ngFor=\\\"let p of playlists\\\"\\r\\n          dnd-draggable\\r\\n          [dragEnabled]=\\\"true\\\"\\r\\n          [dragData]=\\\"p.id\\\"\\r\\n          [disableRipple]=\\\"true\\\"\\r\\n          [dropZones]=\\\"['user-pane-item']\\\"\\r\\n        >\\r\\n          <img mat-list-icon [src]=\\\"p.image_url\\\">\\r\\n          <a matLine>{{ p.name }}</a>\\r\\n        </mat-list-item>\\r\\n    </mat-nav-list>\\r\\n    \\r\\n    <div>\\r\\n      <audio [src]=\\\"previewService.url\\\" autoplay controls></audio>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/user-pane/user-pane.component.html\n// module id = ../../../../../src/app/dashboard/user-pane/user-pane.component.html\n// module chunks = main","var escape = require(\"../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  width: 300px; }\\n  .container .card-user {\\n    box-sizing: border-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-direction: column;\\n        flex-direction: column;\\n    -ms-flex-align: start;\\n        align-items: start;\\n    padding: 20px 20px 10px;\\n    width: 300px;\\n    background-image: url(\" + escape(require(\"../../../assets/user-bg.png\")) + \"); }\\n    .container .card-user img {\\n      width: 70px;\\n      border-radius: 100%; }\\n    .container .card-user .perfil-info h4 {\\n      font-size: 25px;\\n      margin-bottom: 5px; }\\n    .container .card-user .perfil-info h5 {\\n      font-size: 16px;\\n      margin-bottom: 0; }\\n  .container .playlists h3 {\\n    margin-top: 20px;\\n    padding-bottom: 5px;\\n    margin-bottom: 0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/user-pane/user-pane.component.scss\n// module id = ../../../../../src/app/dashboard/user-pane/user-pane.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {SpotifyService} from '../../spotify.service';\r\nimport {MusicaPreviewService} from \"../../musica-preview.service\";\r\n\r\n@Component({\r\n  selector: 'app-user-pane',\r\n  templateUrl: './user-pane.component.html',\r\n  styleUrls: ['./user-pane.component.scss']\r\n})\r\nexport class UserPaneComponent implements OnInit {\r\n  \r\n  playlists: Array<any> = []\r\n  \r\n  \r\n  \r\n  constructor( public api: SpotifyService, public previewService: MusicaPreviewService) {\r\n    \r\n    let p: Map<string, any> = api.usuario.playlists\r\n    let int: IterableIterator<string> = p.keys()\r\n    let key: IteratorResult<string>\r\n\r\n    do {\r\n      key = int.next()\r\n      let get = p.get(key.value)\r\n      if (get != undefined && get != null)\r\n        this.playlists.push(get)\r\n    } while (!key.done)\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/dashboard/user-pane/user-pane.component.ts","import {\r\n  MatAutocompleteModule, MatButtonModule,\r\n  MatButtonToggleModule, MatCardModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatDialogModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule, MatIconRegistry,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule, MatNativeDateModule, MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule, MatSidenavModule, MatSliderModule, MatSlideToggleModule, MatSnackBarModule, MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {NgModule} from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CdkTableModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n  ],\r\n  exports: [\r\n    CdkTableModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/material.module.ts","import {SpotifyService} from \"./spotify.service\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Musica} from \"./shared/musica.model\";\r\n\r\n\r\n/**\r\n * Serviço responsavel por manipular as respostas aos eventos\r\n * de drag and drop de musicas em playlist\r\n * */\r\n@Injectable()\r\nexport class MusicaManager {\r\n  \r\n  private musicaSendoCarregada:  any = {}\r\n  \r\n  constructor(private spotifyService: SpotifyService) {}\r\n  \r\n  \r\n  /**\r\n   * Metodo chamado quando o usuario começar a arastar um musica.\r\n   * Esse metodo controi o objeto para o atributo dndMusica\r\n   * */\r\n  public dropInitEvent(musica: Musica, playlist: string, index: number){\r\n    this.musicaSendoCarregada = musica\r\n    this.musicaSendoCarregada.playlist_drag = playlist\r\n    this.musicaSendoCarregada.start_index = index\r\n  }\r\n  \r\n  \r\n  /**\r\n   * Metodo chamado quado o usuario soltar uma musica na playlist\r\n   * */\r\n  public dropEndEvent(musica: Musica, playlist: string,  index: number){\r\n    this.musicaSendoCarregada.playlist_drop = playlist\r\n    this.musicaSendoCarregada.new_index = index\r\n    \r\n    /*console.log({\r\n      playlist_atual: this.musicaSendoCarregada.name,\r\n      musica_carregada: this.musicaSendoCarregada\r\n    })*/\r\n    \r\n    this.determinarAcao(this.musicaSendoCarregada)\r\n    \r\n    this.musicaSendoCarregada = {}\r\n  }\r\n  \r\n  \r\n  /**\r\n   * <p>Determina que ações deve ser tomada após o evento de drop de uma musica.</p>\r\n   * <p>Se os atributo playlist_drag e playlist_drop forem iguais,\r\n   * então a musica será reordenada dentro da playlist_drag.</p>\r\n   * <p>Se estes atributos forem diferentes, subentende-se que a musica foi arastada da\r\n   * playlist_drag para a playlist_drop. A aplicação removerá a musica da playlist_drag\r\n   * e adicionará à musica na playlist_drop.</p>\r\n   * */\r\n  private determinarAcao(musica){\r\n    // se a musica for largada na mesma playlist que começou a ser arrastada\r\n    if (musica.playlist_drag == musica.playlist_drop) {\r\n      this.reordenarMusica(musica.playlist_drag, musica.start_index, musica.new_index, musica.id)\r\n    } else {\r\n      this.removerMusicaDaPlaylist(musica.playlist_drag, musica.id)\r\n      this.adicionarMusicaNaPlaylist(musica.playlist_drop, musica.id, musica.new_index)\r\n    }\r\n  }\r\n  \r\n  \r\n  private reordenarMusica(playlist: string, oldIndex: number, newindex: number, musicaID: string) {\r\n    console.log(['reordenar',arguments])\r\n  }\r\n  \r\n  private removerMusicaDaPlaylist(playlist_drag: any, id: string) {\r\n    console.log(['remover',arguments])\r\n  \r\n  }\r\n  \r\n  private adicionarMusicaNaPlaylist(playlist_drag: string, id: string, new_index: number) {\r\n    console.log(['adicionar',arguments])\r\n  \r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/musica-manager.service.ts","import {Injectable} from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class MusicaPreviewService {\r\n  \r\n  public url: string = ''\r\n  \r\n  public preview(url) {\r\n    console.log(url)\r\n    this.url = url\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/musica-preview.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {SpotifyService} from \"./spotify.service\";\r\n\r\n@Injectable()\r\nexport class RouterGuard implements CanActivate {\r\n  \r\n  constructor(private api: SpotifyService){}\r\n  \r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return !this.api.usuarioValido()\r\n  }\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/router-guard.ts","import {Router, Routes} from '@angular/router';\r\nimport {AppComponent} from './app.component';\r\nimport {CallbackComponent} from './callback/callback.component';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {SolicitarAcessoComponent} from './solicitar-acesso/solicitar-acesso.component';\r\nimport {PlaylistViewComponent} from \"./dashboard/playlist-view/playlist-view.component\";\r\nimport {RouterGuard} from \"./router-guard\";\r\n\r\nexport const ROUTES: Routes = [\r\n  {path: '', component: SolicitarAcessoComponent,},\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: 'painel', component: DashboardComponent, canActivate: [ RouterGuard ]}\r\n]\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/routes.routes.ts","\r\n/**\r\n * Classe modelo para as credenciais de acesso da api do spotify\r\n * */\r\nexport class Access {\r\n  public access_token: string\r\n  public token_type: string\r\n  public expires_in: string\r\n\r\n  constructor(args) {\r\n    return Object.assign(this, args)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/shared/Access.model.ts","\r\nexport class Musica {\r\n  album_name: string\r\n  artists_name: string\r\n  id: string\r\n  name: string\r\n  preview_url: string\r\n  \r\n  constructor(args) {\r\n    return Object.assign(this, args)\r\n  }\r\n  \r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/shared/musica.model.ts","import {Musica} from \"./musica.model\";\r\n\r\nexport class Playlist {\r\n  id: string\r\n  image_url: string\r\n  name: string\r\n  tracks_url: string\r\n  tracks: Array<Musica> = new Array()\r\n  tracks_total: Number\r\n  \r\n  constructor(args){\r\n    return Object.assign(this, args)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/shared/playlist.model.ts","import {Playlist} from \"./playlist.model\";\r\n\r\nexport class Usuario {\r\n  \r\n  display_name: string\r\n  email: string\r\n  prifile_image: string\r\n  id: string\r\n  playlists: Map<string, Playlist> = new Map()\r\n  \r\n  constructor(arg) {\r\n    return Object.assign(this, arg);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/shared/usuario.model.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n  <section class=\\\"mat-typography\\\">\\r\\n    <h1 class=\\\" mat-display-3 headline\\\">Spotify Manager</h1>\\r\\n    <h2 class=\\\"title mat-display-2\\\">Gerencie suas playlists de maneira unica.</h2>\\r\\n    <p>Nosso app ajuda você a:</p>\\r\\n\\r\\n    <ul>\\r\\n      <li>\\r\\n        Ordernar suas playlists do Spotify apenas clicando e arrastando.\\r\\n      </li>\\r\\n      <li>\\r\\n        Adicionar e remover musicas de suas playlists.\\r\\n      </li>\\r\\n      <li>\\r\\n        Crie paylists de maneira rapida e facil.\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <p>\\r\\n      para começar basta nos dar acesso as suas informações do spotify.\\r\\n    </p>\\r\\n    <button\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"conectar()\\\"\\r\\n    >Click aqui para começar</button>\\r\\n  </section>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/solicitar-acesso/solicitar-acesso.component.html\n// module id = ../../../../../src/app/solicitar-acesso/solicitar-acesso.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  margin: 30px 10% 10%; }\\n  .container ul {\\n    margin-top: 10px;\\n    margin-bottom: 15px; }\\n    .container ul li {\\n      margin-left: 15px; }\\n  .container button {\\n    margin-top: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/solicitar-acesso/solicitar-acesso.component.scss\n// module id = ../../../../../src/app/solicitar-acesso/solicitar-acesso.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {SpotifyService} from '../spotify.service';\r\nimport {environment} from \"../../environments/environment\";\r\n\r\n@Component({\r\n  selector: 'app-solicitar-acesso',\r\n  templateUrl: './solicitar-acesso.component.html',\r\n  styleUrls: ['./solicitar-acesso.component.scss']\r\n})\r\nexport class SolicitarAcessoComponent implements OnInit {\r\n\r\n\r\n\r\n  constructor(private spotifyService: SpotifyService){\r\n    if (!environment.production)\r\n      this.conectar()\r\n  }\r\n\r\n  conectar(): void {\r\n    this.spotifyService.solicitarAcesso();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/solicitar-acesso/solicitar-acesso.component.ts","\r\nimport {Injectable, OnDestroy} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {environment as env} from '../environments/environment';\r\nimport {Access} from './shared/Access.model';\r\nimport 'rxjs/operator/toPromise'\r\nimport {Usuario} from \"./shared/usuario.model\";\r\nimport {Playlist} from \"./shared/playlist.model\";\r\nimport {Musica} from \"./shared/musica.model\";\r\n/**\r\n * Classe que gerencia a comunicação do app com a API do spotify.\r\n *\r\n * */\r\n@Injectable()\r\nexport class SpotifyService {\r\n\r\n  public access: Access = new Access(null)\r\n  public usuario: Usuario\r\n  \r\n  private headers\r\n  \r\n  constructor(\r\n    private connection: HttpClient,\r\n    private router: Router\r\n  ){\r\n    let host = window.location.protocol + '//' +window.location.host;\r\n    \r\n    // se o app estiver rodando no github pages\r\n    if (host.indexOf('github') != -1){\r\n      host = host.concat('/spotifyManager')\r\n    }\r\n    env.redirect_uri = host.concat('/callback')\r\n  }\r\n\r\n  \r\n  public solicitarAcesso() {\r\n    let url: string = `${env.spotifyOAuthUrl}?client_id=${env.client_id}&redirect_uri=${env.redirect_uri}&scope=${env.scope}&response_type=token`\r\n    window.location.href = encodeURI(url)\r\n  }\r\n\r\n  public pegarInformacoesDoUsuario(): Promise<Usuario> {\r\n    \r\n    if (this.headers == undefined) {\r\n      this.headers = {\r\n        headers: {\r\n          'Authorization': `${this.access.token_type} ${this.access.access_token}`\r\n        }\r\n      }\r\n    }\r\n    \r\n    return new Promise<Usuario>((resolve, reject) => {\r\n      this.connection.get( `${env.spotify_api}/me`, this.headers)\r\n        .toPromise()\r\n        .then((resp: any) => {\r\n          if (!!resp.error){\r\n            console.log('spotify.service: ' + resp)\r\n            reject('Erro, para continuar você precisa nos dar acesso as suas informações!')\r\n          }\r\n          this.usuario = new Usuario({\r\n              display_name: resp.display_name,\r\n              email: resp.email,\r\n              id: resp.id,\r\n              profile_image: resp.images[0] == undefined ? undefined : resp.images[0].url\r\n          })\r\n          resolve(this.usuario)\r\n        })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Carrega a lista de playlists do usuario.\r\n   *\r\n   * Este metodo recebe como paramentro uma string.\r\n   * Este paramentro não deve ser passado durante a invocação do mentodo, pois,\r\n   * ele é usado internamente para carregar as demais paginas de playlists do usuario\r\n   *\r\n   * @param url Url? da prozima pagina de playlists do usuario.\r\n   *\r\n   * @return Pomise que busca e salva as playlists do usuario.\r\n   * */\r\n  public carregarPlaylists(url?: string): Promise<any>{\r\n    \r\n    //faz a soliciração para a primeira pagina de playlists para o usuario caso um urm expecifica não tenha sido solicitada\r\n    let req_url = !!!url ? `${env.spotify_api}/me/playlists` : url\r\n    \r\n    return new Promise<any>((resolve, reject) => {\r\n      this.connection.get(req_url, this.headers)\r\n        .toPromise()\r\n        .then((resp: any) => {\r\n\r\n          // caso seja retornado um erro pela plataforma do spotify\r\n          if (!!resp.error){\r\n            console.log(['spotify.service: ',resp])\r\n            reject('Erro ao ler as suas playlists')\r\n          }\r\n          \r\n          // caso exista mais paginas de playlists\r\n          if (resp.next != null){\r\n            this.carregarPlaylists(resp.next).then((r: any) => {\r\n              this.salvarPlayLists(r)\r\n              resolve(resp)\r\n            })\r\n          } else {\r\n            this.salvarPlayLists(resp)\r\n            resolve(resp)\r\n          }\r\n        })\r\n    })\r\n  }\r\n  \r\n  /**\r\n   * Carrega as musicas da playlist informado.\r\n   *\r\n   * Obs.: O paramentro <i>tracks_url</i>  não deve ser informado, pois ele é\r\n   * de uso interno do serviço.\r\n   * @param playlist da playlist que deseja carregar as musicas.\r\n   * @param tracks_url (Opcional) url da pagina de musicas.\r\n   * */\r\n  public carregarMusicas(playlist: Playlist, tracks_url?: string): Promise<Playlist> {\r\n    \r\n    // filtra apenas os campos necessarios para o funcionamento da aplicação\r\n    let fields = 'items(track(album.name,artists.name,name,id,preview_url)),next'\r\n    \r\n    return new Promise<Playlist>((resolve, reject) => {\r\n      this.connection.get( `${playlist.tracks_url}?${fields}`, this.headers)\r\n        .toPromise()\r\n        .then((resp: any) => {\r\n          \r\n          // caso seja retornado um erro pela plataforma do spotify\r\n          if (!!resp.error){\r\n            console.log(['spotify.service: ',resp])\r\n            reject('Erro ao ler as músicas')\r\n          }\r\n          \r\n          // caso exista mais paginas de playlists\r\n          if (resp.items.next != null){\r\n            this.carregarMusicas(playlist, resp.items.next).then((r: any) => {\r\n              this.salvarMusicas(r, playlist)\r\n              resolve(resp)\r\n            })\r\n          } else {\r\n            this.salvarMusicas(resp, playlist)\r\n            resolve(playlist)\r\n          }\r\n        })\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * Lê os paramentros da url e os trasforma em um objeto do tipo Access.\r\n   * */\r\n  public lerOsParamentrosDaUrl(url: string){\r\n    url = url.split('#')[1] // pega os parametros na url\r\n    for (let param of url.split('&')) {\r\n      let data = param.split('=')\r\n      this.access[data[0]] = data[1]\r\n    }\r\n  }\r\n  \r\n  public getPlaylistById(id: string){\r\n    return this.usuario.playlists.get(id)\r\n  }\r\n  \r\n  private salvarPlayLists(data: any): void{\r\n    for (let item of data.items) {\r\n      if (item.collaborative || item.owner.id == this.usuario.id) {\r\n        this.usuario.playlists.set(item.id, new Playlist({\r\n            name: item.name,\r\n            id: item.id,\r\n            image_url: item.images[2] == undefined ? undefined : item.images[2].url,\r\n            tracks_url: item.tracks.href,\r\n            tracks_total: item.total\r\n          })\r\n        )\r\n      }\r\n    }\r\n    \r\n  }\r\n  \r\n  private salvarMusicas(resp: any, playlist: Playlist){\r\n    let playlist_tracks = playlist.tracks\r\n    for (let item of resp.items) {\r\n      playlist_tracks.push(new Musica({\r\n        album_name: item.track.album.name,\r\n        artists_name: item.track.artists[0].name,\r\n        id: item.track.id,\r\n        name: item.track.name,\r\n        preview_url: item.track.preview_url\r\n      }))\r\n    }\r\n  }\r\n  \r\n  usuarioValido(): boolean {\r\n    if (this.access.access_token == undefined) {\r\n      this.router.navigate([''])\r\n    }\r\n    return this.access.access_token == undefined\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/app/spotify.service.ts","module.exports = __webpack_public_path__ + \"user-bg.40507f219cd4c007528d.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/assets/user-bg.png\n// module id = ../../../../../src/assets/user-bg.png\n// module chunks = main","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  redirect_uri: '',\r\n  scope: 'user-read-private user-read-email playlist-read-private playlist-modify-private playlist-modify-public playlist-read-collaborative',\r\n  spotifyOAuthUrl: 'https://accounts.spotify.com/authorize',\r\n  client_id: '01d159793e8f43fbad69100d83af067c',\r\n  spotify_api: 'https://api.spotify.com/v1',\r\n\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/environments/environment.ts","import {enableProdMode} from '@angular/core';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {AppModule} from './app/app.module';\r\nimport {environment} from './environments/environment';\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/matheus/Dropbox/projetos/spotifyManager/src/main.ts"],"sourceRoot":"webpack:///"}